1715 24-10-2018 NZST

command form was given as backticks with commands separated on lines

suggests the commands are essentiall string format.

Would make sense to separate the concerns of command parsing and execution

Specifies only that the application should read commands not that the robot should, so should be ok to have the
robot command set strictly defined by say type systems / enums (assuming ruby has these, been a while) - actually even
could have these be methods.
Probably make them methods.
extensibility point, make the table a parameter to the place method.

then can have adapters to parse commands from different sources (e.g. console, file, rest API, string)

for sake of this exercise probably only use one of them

_______________

1730 24-10-2018 NZST

looking up interfaces in ruby - seems to not have them but not needed due to duck typing, can either have a class thar wraps something
or extend a class that raises notimplemented when any method called.

Are these even necessary at all?

_________________

2140 24-10-2018 NZST

Apparently vectors can be used in hashes by value, this could be useful for representing directions

should orientation be specified as an enumerable or a vector?

2205 24-10-2018 NZST

Wait ruby doesnt seem to have enums - in which case is a symbol or a constant better? need to find out more about symbols

is a symbol keyed hash roughly equivalent to enum?

_____________________

2255 24-10-2018 NZST

should direction symbols to vectors and turns from directions be in the same module or 2 separate modules

________________________

20:52 25-10-2018 New Zealand Standard Time (07:52 25-10-2018 Utc)

Thought - are hashes declared in modules immutable or is there a way to make them so?

if not may have to restructure the CompassPoints module - do not want it to be possible for someone to accidentally define north as
east later

Also - should there be nil checks when it shouldn't be possible for the variable to be nil? opting for the safe approach, but in theory
it shouldn't be possible for any of table, position or orientation to be nil unless they all are nil

autoformatter (rubocop?) replaced a block definition { |robot| robot.move_forward() } with a parameter &:move_forward - wondering if
this is really better, technically simpler but feels less readable - will put up with it for now because do need some sort of autoformatter / linter

___________________________

16:54 27-10-2018 New Zealand Standard Time (03:54 27-10-2018 Utc)

autoformatter converts comma separated arrays of strings / symbols to the fancy %w, %i syntax - is this actually more readable though?
But again inclined to just trust the autoformatter because of the necessity of having one

___________________________

17:08 27-10-2018 New Zealand Standard Time (04:08 27-10-2018 Utc)

wondering how much should test that the cardinal directons are defined as expected. 

as in does LEFT_TURNS[:north] equal :east, etc - but then the module itself only exists to define this and seems to be
a case of duplication.

Maybe check for consistency (east is opposite of west, four turns in the same direction retur to start, 2 to opposite, LEFT_TURNS[RIGHT_TURNS[anything]] = the same thing)

maybe will make these tests if time permits.

however also need to implement a parser

__________________________________

18:33 27-10-2018 New Zealand Standard Time (05:33 27-10-2018 Utc)

Should command parser be a class or a module? does it need anything besides functions. Maybe lets just start implementing and seem

In actual fact probably want to abstract out how the commands are given.

How about returning a stream of commands - if want to respond to console input should be able to respond in an event driven way - similarly
if want to expose the API over a web interface...

__________________________________

22:30 27-10-2018 New Zealand Standard Time (09:30 27-10-2018 Utc)

quick google suggests observable/observer is the equivalent of events in ruby